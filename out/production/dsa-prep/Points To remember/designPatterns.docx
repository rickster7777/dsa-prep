public class Main {
  public static void main(String[] args) {
    Vehicle vehicle1 = new Car();
    vehicle1.start();
    vehicle1.stop();
    Vehicle vehicle2 = new Truck();
    vehicle2.start();
    vehicle2.stop();
    Vehicle vehicle3 = new Bike();
    vehicle3.start();
    vehicle3.stop();
  }



What if we need to add more vehicle types in the future? ðŸš™
What if the logic of vehicle creation changes? ðŸ”§

public class Main {
  public static void main(String[] args) {
    String vehicleType = "Truck"; // Imagine this value is dynamic
    Vehicle vehicle;
    if (vehicleType.equals("Car")) {
      vehicle = new Car();
    } else if (vehicleType.equals("Truck")) {
      vehicle = new Truck();
    } else if (vehicleType.equals("Bike")) {
      vehicle = new Bike();
    } else {
      throw new IllegalArgumentException("Unknown vehicle type");
    }
    vehicle.start();
    vehicle.stop();
  }
}


Using factor pattern
public class VehicleFactory {
  public static Vehicle getVehicle(String vehicleType) {
    if (vehicleType.equals("Car")) {
      return new Car();
    } else if (vehicleType.equals("Truck")) {
      return new Truck();
    } else if (vehicleType.equals("Bike")) {
      return new Bike();
    } else {
      throw new IllegalArgumentException("Unknown vehicle type");
    }
  }
}

public class Main {
  public static void main(String[] args) {
    Vehicle vehicle1 = VehicleFactory.getVehicle("Car");
    vehicle1.start();
    vehicle1.stop();
    
    Vehicle vehicle2 = VehicleFactory.getVehicle("Truck");
    vehicle2.start();
    vehicle2.stop();
    
    Vehicle vehicle3 = VehicleFactory.getVehicle("Bike");
    vehicle3.start();
    vehicle3.stop();
  }
}



